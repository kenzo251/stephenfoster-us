{"version":3,"sources":["logo.svg","App.js","writings/coding-for-babies.js","writings/polite-barbarians.js","reportWebVitals.js","index.js"],"names":["Root","props","useState","content","Fade","in","duration","welcomeMessage","commands","help","writings","Math","random","level","Writings","showing","setShowing","Button","variant","color","onClick","e","title","text","ReadingWidget","page","setPage","pages","split","map","c","timeout","Card","style","letterSpacing","lineHeight","fontSize","fontFamily","margin","CardContent","Pagination","onChange","p","count","length","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAAe,I,wFC2Bf,IAAMA,EAAO,SAACC,GACb,IAAI,EAAwBC,mBAAS,IAArC,mBAAKC,EAAL,UACA,OAAO,qCACL,cAACC,EAAA,EAAD,CAAMC,IAAI,EAAMC,SAAU,IAA1B,SAAgC,8CAChC,cAACF,EAAA,EAAD,CAAMC,IAAI,EAAMC,SAAU,IAA1B,SACD,cAAC,IAAD,CACEC,eAAgB,kFAChBC,SAAU,CACTC,KACC,qCACI,mGACA,qEACH,+BACC,6BAAI,4EACJ,6BAAI,gGACJ,6BAAI,2EAGPC,SAAU,WACT,OAAO,cAAC,EAAD,GAAeC,KAAKC,WAE5BC,MAAO,WACN,MAAO,iCAKPV,MAIAW,EAAW,WACf,MAA8BZ,qBAA9B,mBAAOa,EAAP,KAAgBC,EAAhB,KACA,OAAOD,GAAoB,qCACzB,wGACA,+BACF,+BAAI,cAACE,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYC,QAAS,SAACC,GAAKL,EAAW,cAAC,EAAD,CAAeM,MAAM,oBAAoBC,KC7DtG,qhpBD6DX,iCAAJ,4JACA,+BAAI,cAACN,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYC,QAAS,SAACC,GAAKL,EAAW,cAAC,EAAD,CAAeM,MAAM,wBAAwBC,KE9D1G,mgQF8DX,iCAAJ,gJAOIC,EAAgB,SAACvB,GACtB,MAAwBC,mBAAS,GAAjC,mBAAOuB,EAAP,KAAaC,EAAb,KACMC,EAAQ1B,EAAMsB,KAAKK,MAAM,cAAcC,KAAI,SAACC,GAAD,OAAM,cAAC,IAAD,UAAgBA,OAEvE,OAAO,mCACN,cAAC1B,EAAA,EAAD,CAAMC,IAAI,EAAM0B,QAAS,IAAzB,SACC,cAACC,EAAA,EAAD,CAAMC,MAAO,CAACC,cAAe,UAAWC,WAAY,KAAMC,SAAU,GAAIC,WAAY,0EAA6EC,OAAQ,IAAzK,SACC,eAACC,EAAA,EAAD,WACC,6BAAKtC,EAAMqB,QACVK,EAAMF,GACP,cAACe,EAAA,EAAD,CAAYC,SAAU,SAACpB,EAAEqB,GAAH,OAAOhB,EAAQgB,EAAI,IAAIC,MAAOhB,EAAMiB,OAAQzB,MAAM,sBAO9D0B,EA3Ef,WACC,OACC,8BACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWhD,aGPxBiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.27b09d83.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect} from \"react\";\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Fade from '@material-ui/core/Fade';\nimport { ReactTerminal } from \"react-terminal\";\nimport { TerminalContextProvider } from \"react-terminal\";\nimport { Button, Card, CardActions, CardContent, CardHeader } from '@material-ui/core';\nimport Pagination from '@mui/material/Pagination';\nimport {text as codingForBabiesText} from './writings/coding-for-babies';\nimport {text as politeBarbariansText} from './writings/polite-barbarians';\nimport ReactMarkdown from 'react-markdown';\n\nfunction App() {\n\treturn (\n\t\t<div> \n\t\t\t<TerminalContextProvider>\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={Root} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</TerminalContextProvider>\n\t\t</div>\n\t);\n}\n\nconst Root = (props) => {\n\tvar [content, setContent] = useState(\"\")\n\treturn <>\n\t  <Fade in={true} duration={1000}><p>Or is it...</p></Fade>\n\t  <Fade in={true} duration={2000}>\n\t\t<ReactTerminal \n\t\t\t\twelcomeMessage={<p>This interface helps those who help themselves...</p>}\n\t\t\t\tcommands={{\n\t\t\t\t\thelp:\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t    <p>If you've gotten this far, congratulations!!  You must be a coder.</p>\n\t\t\t\t\t\t    <p>Available command(s) for your level:</p>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li><tt>help - Prints the message you're reading</tt></li>\n\t\t\t\t\t\t\t\t<li><tt>writings - Shows you what you can read at your current level</tt></li>\n\t\t\t\t\t\t\t\t<li><tt>level - Prints your current level</tt></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</>,\n\t\t\t\t\twritings: () => {\n\t\t\t\t\t\treturn <Writings key={Math.random()} />\n\t\t\t\t\t},\n\t\t\t\t\tlevel: () => {\n\t\t\t\t\t\treturn \"You're a Level 1 viewer!\"\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t  </Fade>\n     {content}\n\t</>\n}\n\nconst Writings = () => {\n  const [showing, setShowing] = useState()\n  return showing ? showing : <>\n    <p>You found the writings accessible at your level.  Click a button below!</p>\n    <ul>\n\t\t<li><Button variant=\"contained\" color=\"secondary\" onClick={(e)=>{setShowing(<ReadingWidget title=\"Coding for Babies\" text={codingForBabiesText} />)}}>\"Coding for Babies\"</Button> - A satire on coding education and Silicon Valley culture.  I wrote this in late 2021. (I'll be typesetting it for the web over the next few days...)</li>\n\t\t<li><Button variant=\"contained\" color=\"secondary\" onClick={(e)=>{setShowing(<ReadingWidget title=\"The Polite Barbarians\" text={politeBarbariansText} />)}}>\"Polite Barbarians\"</Button> - A charming tale about Trojan horses.  I wrote this in early 2020. (I'll be typesetting it for the web over the next few days...)</li>\n\t</ul>\n  </>\n}\n\n\n\nconst ReadingWidget = (props) =>{\n\tconst [page, setPage] = useState(0) \n\tconst pages = props.text.split(\"---PAGE---\").map((c)=> <ReactMarkdown>{c}</ReactMarkdown>)\n\n\treturn <>\n\t\t<Fade in={true} timeout={1000}>\n\t\t\t<Card style={{letterSpacing: \"-.003em\", lineHeight: 1.58, fontSize: 21, fontFamily: \"medium-content-serif-font,Georgia,Cambria,\\\"Times New Roman\\\",Times,serif\", margin: 10}}>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<h2>{props.title}</h2>\n\t\t\t\t\t{pages[page]}\n\t\t\t\t\t<Pagination onChange={(e,p)=>setPage(p - 1)} count={pages.length} color=\"primary\" />\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t</Fade>\n\t</>\n}\n\nexport default App;","\n\nexport const text = \n    `Now that we've all done an Hour of Code or two,\nwe can all collectively agree on two things: 1) coding is the new hip way to use the computer, and\n2) you're never too young to start doing it. That's why I'm announcing my EdTech company's\nnew initiative: \"Coding for Babies.\" Read on to hear about 5 HOT NEW PRODUCTS that bring coding\neducation out of college lecture halls and into the cradle.\n\n---PAGE---\n\n### 1. BASIC programming language\n\nWith what we're calling Baby All-purpose Symbolic Instructional Code (aka \"BASIC\"), let's just say \nthat we've created a programming language whose syntax is so easy that, well, even a baby can use it! \nHere's the 3-step process to getting your baby using our COPA-compliant, at-home BASIC interpreter as \nsoon as possible:\n\n---PAGE---\n\n1. Purchase our patented BASIC BabyCam, connect it to your WIFI, download our BASIC BabyCam Mobile App, and sign in with your Facebook, Google, Instagram, or TikTok account(s).\n\n2. Point the BASIC BabyCam  at your baby.\n\n3. Sit back and let our machine learning algorithms begin building your baby's unique BabyLanguageᵀᴹ Model.\t\n\nWithin minutes, your BASIC BabyCam will start detecting over 1,000 unique sounds, \nfacial expressions, and gestures that can be used to write programs! What you see is \n\"your baby being a baby,\" but what the BASIC BabyCam sees is...\n\n---PAGE---\n\nBabyLanguageᵀᴹ like this:\n\n\\`\\`\\`\n\t[Burble] \n\t[Cry]\n\t[Babble]\n\t[Grimace]\n\t[Burble again]\n\t[Squirm]\n\t[Fart]\n\t[Smile]\n\\`\\`\\`\n\nWhat now, you ask? When the LED beneath the BASIC BabyCam's watchful eye turns from red to yellow, you can use your BASIC BabyCam Mobile App to:\n\n1. See what your baby is saying in BabyLanguageᵀᴹ (even when you're not at home!)\n\n2. Upgrade your account to the Silver or Gold level! \n\n3. Configure your baby's ad preferences if you choose not to upgrade! (More on this later.)\n\t \nEither way, when night falls, the fun begins. Put your child to bed like normal, taking care that the BASIC BabyCam is still pointed directly at your baby. While you sleep, the BASIC BabyCam will be helping your baby take their first steps as a software engineer with  our science-inspired, AI-driven HelloWorldᵀᴹ Curriculum.\n\n---PAGE---\n\n### 2. HelloWorldᵀᴹ Curriculum\n\nAt some point during the night, the BASIC BabyCam's LED will turn from yellow to green. This means the education has begun.\n\nWhenever a[Smile] is detected, you may hear a particularly pleasant noise like *beep boop!*emitted from the BASIC BabyCam's speakers. Likewise, when a [Grimace] is detected, an unpleasant noise like *wamp wamp!!* will play. \n\nWithin a few hours, the BASIC BabyCam can often induce a [Smile] or a [Grimace] simply by playing the associated noise. You might wonder, \"Is my baby programming the BASIC BabyCam? Or is it the other way around?\" The answer is: it's both!\n\n---PAGE---\n\n> Side note for Bronze users: When your baby does a [Smile], you may occasionally hear the BASIC BabyCam whisper things like, \"Silly Rabbit, Trix are for kids\" and other messages from our advertising partners. \n\n> Don't worry. The ads will not hinder your baby's coding education (and in many cases may improve it!) \n\nMost babies are able to write a \"Hello, World\" program within their first night of coding education. Here's how it works!\n\nThe BASIC BabyCam will chose two of your baby's unique BabyLanguageᵀᴹ expressions (such as [Babble] and[Burble]) to represent the two most important syntactic building blocks of BASIC programs. Whenever your baby does a [Babble] followed by a [Burble], your baby will receive a *beep boop!* and will begin to [Smile] . Note that your baby will also be rewarded for a [Babble] followed by a [Burble] even if there are other BabyLanguageᵀᴹ expressions in between. For example:\n\n---PAGE---\n\n\\`\\`\\`\n[Babble]\n  [Fart]\n  [Fart]\n[Burble]\n--------\n*beep boop!* / [Smile]\n\\`\\`\\`\n\n\nIndeed, as long the BASIC BabyCam can detect a [Burble] for every [Babble], your baby will receive a *beep boop!* and will [Smile], i.e.:\n\n\\`\\`\\`\n[Babble]\n  [Fart]\n  [Fart]\n  [Babble]\n    [Cry]\n    [Squirm]\n  [Burble]\n[Burble]\n--------\n*beep boop!* / [Smile]\n\\`\\`\\`\n\n---PAGE---\n\nBut if BASIC BabyCam doesn't detect a matching[Burble] for a [Babble] within a minute or two, a *wamp wamp!!* will be played:\n\n\\`\\`\\`\n[Babble]\n  [Fart]\n  [Fart]\n  [Babble]\n    [Cry]\n    [Squirm]\n  [Burble]\n  [Long Silence]\n--------\n*wamp wamp!!* / [Grimace]\n\\`\\`\\`\n\n\nAs your baby becomes more and more skilled at matching their [Babbles] with their [Burbles], the chances of your baby creating a syntactically correct program rise dramatically. It's only a matter of time before your baby accidentally writes  a program like the following:\n\n---PAGE---\n\n[Babble]\n  [Squirm]\n  [Wave]\n[Burble]\n\nCongratulations! Your baby just wrote a \"Hello, World!\" program! This event will be recorded, timestamped, and saved in your gallery forever. \nWhen you wake, the LCD screen of the BASIC BabyCam will be showing a looping video of your baby waving at you. Indeed, whenever your baby writes a program of the following form…\n\n[Babble]\n  [Squirm]\n  [*]\n[Burble]\n\n---PAGE---\n\n…the BASIC BabyCam (whose watchful eye is always recording) will save the footage of [*] to your gallery and begin playing it on the LCD screen. This [*] could be anything from a [Wave] to [Fart] to [Smile], depending on your baby's creative inclinations.\n\nWhen you finish celebrating your baby's first program, please remember that learning to code is a life-long journey. One night of coding education as a baby will not be enough to ensure that your baby grows up to be eligible for the competitive, high-paying software jobs of Silicon Valley. \n\nBut if you keep the BASIC BabyCam pointed directly at your baby at all times, you'll never again be forced to go to sleep worrying about your child's future. \n\nKeep reading to see why some companies in Silicon Valley are doing away with interviews and resumes altogether, choosing instead to hire talent based on the raw number of hours a BASIC BabyCam was pointed directly at the applicant during childhood.\n\n---PAGE---\n\n### 3. BraveNewBabyᵀᴹ Curriculum\n\nNaturally, programs like [Babble][Squirm][Wave][Burble] will be written accidentally at first. Your baby won't know they're coding for a few years, but the BASIC BabyCam doesn't mind being programmed by a baby that doesn't know what programming is.\n\nWhat's important is that this critical formative period (in which your baby can't tell the difference between coding and just existing) is no time to waste! Remember, the baby next door also has a BASIC BabyCam. So does the one down the street. Your baby cannot afford to just lie there when so many other babies are busy learning to code.\n\nThe BraveNewBabyᵀᴹ Curriculum will kick in automatically.\n\nFor example, when your baby does a [Smile], the BASIC BabyCam might quietly whisper sound clips by one or more famous  computer scientists:\n\n* \"Computer science is no more about computers than astronomy is about telescopes.\" ~Edsger Dijkstra\n\n* \"The purpose of abstraction is not to be vague, but to create a new semantic level in which one can be absolutely precise.\" ~Edsger Dijkstra\n\n* \"Teaching COBOL ought to be regarded as a criminal act.\" ~Edsger Dijkstra\n\n> Side note for Bronze users: The shortest path to getting the BASIC BabyCam to play quotes from anyone other than Edsger Dijkstra would be to upgrade to the Silver or Gold levels. This will also allow you to disable ads.\n\nAt first, your baby won't understand these quietly whispered quotes any more than they understand \"Silly Rabbit, Trix are for kids.\" But after years of training with the BASIC BabyCam, they'll grow up to realize that these Edsger Dijkstra pearls make them happy for reasons they can't quite put their finger on. \n\nThis means the education is working.\n\nIf you think this sounds like brainwashing or like something straight out of Aldous Huxley's Brave New World, you'd be wrong! Parents like you can actually configure the BraveNewBabyᵀᴹ Curriculum to conform to their own values.  For example, try opening up the code editor inside your BASIC BabyCam Mobile App and type the following:\n\n\\`\\`\\`\nif [Smile]\n  say \"Going to college is important\"\n\\`\\`\\`\n\nAnd guess what? You just programmed your baby to go to college! Give the BASIC BabyCam a few more years pointed directly at your baby, and your child will grow up to smile whenever they think of the importance of higher education.\n\nThe BASIC BabyCam's state-of-the-art AI will also learn your baby's bathroom related cues, so you can write something like this:\n\n\\`\\`\\`\nif [About to Poop]\n  message_me \"Code Brown incoming!!!\"\n\\`\\`\\`\n\nWith a single line of code, dirty diapers become a thing of the past! \n\nYou're probably thinking: I'm a busy parent; how can find the time to learn how to program my child's BASIC BabyCam? Don't worry! You don't have to. Our marketplace is filled with BraveNewBabyᵀᴹ programs written by parents like you. \n\nPopular choices are:\n\n* Future Product Manager at Microsoft\n* My Baby Knows All the AWS Acronyms\n* Good Christian Baby\n* I Will Vote Republican\n* I Will Never Code in COBOL\n* I Will Vote Democrat\n* I Am Alpha\n* I Am Beta\n\nAgain, you might be thinking that those last two sound like they are pulled directly from A Brave New World. You'd be right, but no one is forcing you to use them. With the re-programmable BraveNewBabyᵀᴹ Curriculum, we've democratized the ability for parents to program their children, which means that your child can be a good Christian product manager at Microsoft who never uses in COBOL, and the baby next door can be an Alpha who votes Republican.\n\nThe future is now. Program your baby according to whatever values were programmed into you! Or… be creative! It's your baby. It's your BASIC BabyCam!\n\n### 4. TuringCompleteᵀᴹ Curriculum\n\nWhile you're doing the hard work of installing cultural programming directly into your baby, the BASIC BabyCam will do its part to make sure that your baby learns a Turing-Complete programming language before they can walk. Here's how it works!\n\nRemember when the BASIC BabyCam assigned meaning to things like the following?\n\n* [Babble] - begin a section of code\n* [Burble] - end a section of code\n* [Babble][Squirm][*][Burble] - play [*] on the LCD screen\n\nNow comes the exciting part. As your baby starts accidentally writing more and more complicated code, some of their programs may become quite long! So when the TuringCompleteᵀᴹ Curriculum kicks in, you'll start to see something new in your BASIC BabyCam Mobile App logs.\n\nInstead of [Babble] and [Burble], you'll see ( and ). And instead of [Squirm] you'll see play. So, if your baby does this\n\n\\`\\`\\`\n[Babble][Squirm][Fart][Burble]\n\\`\\`\\`\n\nyou'll see it printed like this in your BASIC BabyCam Mobile App's logs:\n\n\\`\\`\\`\n(play [Fart])\n\\`\\`\\`\n\nThat's way shorter! Likewise, instead of an incomprehensible stream of nonsense like this\n\n\\`\\`\\`\n[Babble][Drool][*][*][Burble]\n\\`\\`\\`\n\nor this\n\n\\`\\`\\`\n[Babble][Drool][Babble][*][*]...[Burble][*]...[Burble]\n\\`\\`\\`\n\nyou'll instead see a sleek printout like this\n\n\\`\\`\\`\n(define * *)\n\\`\\`\\`\n\nor this\n\n\\`\\`\\`\n(define (* *...) *...)\n\\`\\`\\`\n\nDid you see what the BASIC BabyCam did there? [Drool] was identified by the BASIC BabyCam as the perfect action (in your baby's unique BabyLanguageᵀᴹ) to represent the word define. \n\nPop quiz! If the BASIC BabyCam decides that [Scowl] shall mean if, then what does the following become if written in our new, shorter notation?\n\n\\`\\`\\`\n[Babble][Scowl][*][*][*][Burble] \n\\`\\`\\`\n\nThat's right! It's:\n\n\\`\\`\\`\n(if * * *)\n\\`\\`\\`\n\nOne more! If the BASIC BabyCam decides that [Hiccup] means quote, what is your baby writing if they do the following?\n\n\\`\\`\\`\n[Babble][Hiccup][*]...[Burble]\n\\`\\`\\`\n\nThat's right! It's:\n\n\\`\\`\\`\n(quote * ...)\n\\`\\`\\`\n\nNow, your baby has the power to accidentally write a program like this at any time:\n\n\\`\\`\\`\n(define [Fart]\n  (quote [Laugh] [Wiggle] [Cry] [Laugh]))\n\n(play [Fart])\n\\`\\`\\`\n\nYour baby just accidentally taught the BASIC BabyCam that [Fart] now means[Laugh] [Wiggle] [Cry] [Laugh]. It will now play this sequence of actions on the LCD screen whenever your baby writes (play [Fart]).\n\nIf you have your TuringCompleteᵀᴹ Curriculum level set to \"Get my baby into MIT as soon as possible\" (the default setting at the Silver and Gold levels), the BASIC BabyCam will waste no time finding the perfect BabyLanguageᵀᴹ actions for mathematical inequalities like = < > <= and >=, and for arithmetic operations like + - * and /, and (of course) for the digits 0, 1, 2, etc. Thus, you could soon be waking up to find that your baby has written something like the following:\n\n\\`\\`\\`\n(define ([Wiggle] [Shrug])\n  (play [Fart])\n  (if (= [Shrug] 1)\n      (play [Funny Face])\n      ([Wiggle] (- [Shrug] 1)))))\n\n([Wiggle] 100)\n\\`\\`\\`\n\nThis, of course, plays [Fart] (as previously defined by your baby) 99 times before playing [Funny Face].  \n\nYou might be thinking, \"Hey! Isn't this language powerful enough to solve cool math problems? Why is my baby wasting time playing custom [Fart] videos?\" Well, guess what! Your baby is just a [Babble] and [Burble] or two away from accidentally producing something like this!\n\n\\`\\`\\`\n(define ([Smack Face] [Shrug])\n  (if (<= [Shrug] 1)\n      1\n      (+ ([Smack Face] (- [Shrug] 1))\n         ([Smack Face] (- [Shrug] 2)))))\n\\`\\`\\`\n\nMathematicians might claim this computes the nth Fibonacci number, but for the BASIC BabyCam and your baby, it computes the [Shrug]th [Smack Face] number! \n\nRemember, there are over 1,000 unique sounds, facial expressions, and gestures in your baby's unique BabyLanguageᵀᴹ, and your baby is able to compute the [Shrug]th [Smack Face] number with only a handful of them. Yep, it doesn't take much to have a Turing Complete language at your baby's disposal:\n\n* (,),define, if, and quote \n* Math stuff:  = < > <= >=,+ - * /, 0,1,2,3,4,5,6,7,8, 9.\n* Misc: play\n\nIn due time, the BASIC BabyCam may add a few more:\n\n* Logic stuff: true,false,and, or, not , and eq?\n\nAnd that's it! No need for strings and characters in BASIC because the goal here is to get your baby coding long before they can spell. And there's no need for higher order functions (like map and fold) because these can obviously be derived by your baby when  necessary.\n\nTo those of you who have studied programming, it might seem like your baby is learning Lisp or Scheme, but we can assure you this is not the case. Your baby is just [Babbling] and [Burbling]. Our use of ( and ) in the output on the BASIC BabyCam Mobile App is merely \"syntactic sugar\" for your own reading convenience. Neither your baby nor the runtime of the BASIC interpreter really knows what a \"parenthesis\" is.\n\nThat said, if you ever begin to suspect that your child has learned Lisp or Scheme, please open a ticket with our support team right away! Do not wait! Lisp is not comprehensible to the average programmer in Silicon Valley. Furthermore, Scheme was replaced by Python at MIT because Scheme was too difficult for the average undergraduate computer science major. \n\nWe understand that you want your baby to be above average, but please keep in mind that if your baby becomes a Lisp programmer, we cannot be held responsible for how the average programmers of the world will view your baby. (If your child's first word is \"macro,\" you're already too late. Open that support ticket right away!)\n\nWell, that's it for the TuringCompleteᵀᴹ Curriculum. When normal babies have accidents, it's poopoo and peepee. But when your baby has an accident, it could be poopoo, peepee, or code that simulates a Turing machine!\n\n### 5. NoMoreAccidentsᵀᴹ Curriculum\n\nYou might be wondering, how will my baby begin to write programs that aren't just accidents? \n\nFor millennia, infants of our species have progressed from verbal babbling to fully-formed words and sentences in a neurological process that remains shrouded in mysteries to this day.  So too is the process of learning to code shrouded in mystery. With the NoMoreAccidentsᵀᴹ Curriculum, though, we train your baby with the same state of the art methodology used all the way from kindergarten to college lecture halls. \n\nIt's a combination of three tried and true techniques:\n\nLecture at students about \"concepts.\"\n\nPoint a bunch of coding problems directly at students.\n\nMake students figure things out on their own.\n\nThe lectures about \"concepts\" (i.e. ifs, loops, function definitions, etc.) will be seamlessly interwoven with messages from our advertising partners and Edsger Dijkstra. For example, if you listen closely at night, you may hear the softly voice of the BASIC BabyCam saying something like: \"Trix are for kids. COBOL causes brain damage. And an if expression causes one of two code branches to execute based on the runtime value of some boolean expression.\" \n\nIf you're worried that your baby doesn't know words like \"branches\" or \"runtime\" or \"boolean,\" don't worry! Neither do college students when they take Intro to Programming. But decades upon decades of research convincingly show that if you point a lecturer directly at students for long enough, they often eventually graduate from college. \n\nMeanwhile the BASIC BabyCam's LCD screen will be hard at work displaying automatically generated programming \"problems.\" For example, the screen might mysteriously begin to show a video of your baby doing a [Laugh] whenever they [Stretch] and a [Wiggle] whenever they aren't doing a [Stretch]. In other words the BASIC BabyCam has generated code like this in the background and is running it without telling your baby:\n\n\\`\\`\\`\n(if [Stretch] [Laugh] [Wiggle])\n\\`\\`\\`\n\nAfter a few hours of this, the LCD screen will go dark and the BASIC BabyCam will begin administering *beep boop!* rewards and *wamp wamp!!* punishments whenever your baby does (or does not) begin to write the program that was previously running. Hints will be given to your baby by the BASIC BabyCam when necessary. For example if your baby has done a [Babble][Scowl], then they've written\n\n\\`\\`\\`\n(if \n\\`\\`\\`\n\nAnd after a pause, the LCD screen may show a [Stretch] to help prompt your baby to continue writing the correct solution.\n\nAfter a few years of these automatically generated problems, you can be sure that your baby will have been exposed to at least as many problems as the average college computer science major. And if you're worried that your baby might not have \"gotten\" most of the problems, don't be! Most college students just copy answers from StackOverflow anyway. And they still get hired.\n\nFinally, the BASIC BabyCam leaves plenty of time for creative coding (i.e. letting your baby \"figure it out on their own\"). This is to avoid what often happens to undergraduates: they acquire such a debilitating case of post-coding stress disorder that they can only be convinced to continue doing it when large sums of money are involved. No, we want your baby to maintain their child-like love of coding as long as possible before becoming jaded and bitter.\n\nThis might all sound like magic, but then again, so is the process of learning to speak and write and do mathematics. The human brain keeps many secrets. \n\nSo buy into the AI-driven, science-inspired, COPA-compliant BASIC BabyCam today. You know where to point it.\n\n### Epilogue\n\nAs your baby grows, the BASIC BabyCam will too. For toddlers, we have a touch screen add on. For kindergartners, we have integrations with their favorite tablet apps. For kids in grade school, well… you get the point. \n\nAs for college, your baby might not even need to go! The moment the BASIC BabyCam observes that your child's coding skills have reached \"internship level,\" a message will be sent to the HR departments of several participating tech companies in Silicon Valley. You'll receive an interview request via text message on your phone. \n\nWhen this happens, we urge you to press \"Accept.\" Your years of hard work have paid off! Tech recruiters will now be able to talk to your child through the LCD screen on the BASIC BabyCam. \n\nIf your child performs well, the tech industry will take it from there, pointing your child directly at problems that generate enormous value for consumers and investors. Maybe your child will grow up to work on disruptive technology like the BASIC BabyCam itself! \n\nSome might call it the circle of life. But in coding, we just call it a loop.\n\n\n`","\n\nexport const text =\n`\nThere once was a horde of polite barbarians known for their cunning use of Trojan horses to conquer cities while keeping bloodshed to a minimum. The mayor of one civilized city, hearing the polite horde was en route, ordered his knights: look out for suspicious packages.\n\nThe next morning, a giant wooden horse stood at the city gates, with a bow on top, ribbons gleaming in the first rays of light. The mayor ordered his archers to set it aflame. A few dozen barbarians scurried out of the burning wooden carcass, running for the woods.\n\nThe next day, the sun rose to find a stack of envelopes resting on the scorched earth where the Trojan horse's ashes still lingered. The knights who cautiously investigated discovered thousands of handwritten apology notes, one for each citizen of the walled city. The gist was:\n\n> We, the polite barbarians, apologize for the crudeness of yesterday's onslaught. Your mayor is a most clever man.\n> — The Horde\n\nThese were brought directly to the mayor who discovered, upon close examination, that the backs of the letters were filled top to bottom with invisible ink. It was pro-barbarian propaganda that spoke of the barbarian king's love of Latin and Greek literature, and of the barbarian horde's comfortable lifestyle. Needless to say, the mayor had the letters burned.\n\nThe next day, the sun rose to find the mayor himself standing immobile outside his own gates! But when the knights investigated, they found it was not the mayor — but rather a wax statue, accurate down to the last detail of his expensive clothing, even his monocle and mustache. A plaque at the bottom read: A most clever man.\n\nThe archers were ready to torch it, but the mayor said the optics would be bad: the mayor melting in flames. Instead, after thorough inspection, he had it installed in the courtyard — a better message to the populace.\n\nFor a week, there were no deliveries — but the mayor dared not open the gates, for the nights were alive with barbarian drums. As the food supplies dwindled and the people began to whisper in the streets, the mayor sent riders to ask for help from the king. None of them returned.\n\nJust as the grain silos were beginning to run low, the morning sun found carts of freshly baked bread at the city gates. Naturally, the mayor ordered the women and children to sample each loaf for poison before distributing the food to his knights. The next morning brought more bread, and no poison. And the next morning, the same. The scraps the knights left behind were given to the women and children.\n\nJust as the hottest days of summer began to arrive, the morning bread deliveries ceased. In their place were carts full of gold and jewels — which the mayor ordered be brought to his personal treasure rooms for thorough inspection. So it was for weeks, the grain silos growing empty and the mayor's treasure rooms growing full. The people began to whisper in the streets again, casting the occasional insult at the wax statue, now drooping in the summer heat. To cut down on the whispering, the mayor began passing out gold coins, rubies, and emeralds — even to the poorest of the peasants.\n\nThe mayor promised great sums to any rider who would carry a message to the king. Many tried, but none returned.\n\nBy mid summer, the barbarians had set up a marketplace just outside of archery range, in the grassy fields before the city gates. There were lemonade stands and ice carts, vegetable vendors and cooks. A 24-hour bakery and butchery were erected, wafting the smell of fresh sourdough and fried chicken over the city gates morning and night. The prices were all prominently posted, and quite reasonable: one gold coin for a loaf of bread, a ruby for a cooked chicken, an emerald for three glasses of strawberry lemonade, a buy-one-get-one deal on potato salads, and so on. There were even discounts if you agreed to listen to a short presentation on barbarian history and culture at the small amphitheater erected in the middle of the market.\n\nAlthough it was forbidden to leave the city walls, the children of the poor knew how to sneak over the walls in the dead of night. Occasionally, they were caught sneaking back with a loaf in every pocket, and glasses of lemonade in each hand. The mayor had these unlucky ones executed publicly, beside his now-sagging wax statue.\n\nSo it was for months, until finally, on the first day of winter, the king's cavalry arrived. Shining knights galloped across the grassy plane and laid waste to the thriving barbarian markets. The weary knights on the city walls cheered halfheartedly as the king's men set fire to the barbarian bakery and amphitheater. The peasants gathered in the courtyard and bowed their heads, listening mournfully to the sounds of the lemonade stands being razed, wood and glass obliterated by swords and hooves.\n\nThe mayor rode into the courtyard on his best horse, wearing his best jewels. The gates were opened to receive the king's cavalry. To everyone's surprise, the king himself led — wearing his traditional helmet and breastplate of gold. The peasants dropped to their knees and laid down their own gold and jewels, knowing these would be taxed away soon anyway.\n\nThe king and mayor dismounted and shook hands. The king, removing his helmet, turned out to be not the king everyone expected — but a rugged man wearing barbarian warpaint. “I am the barbarian king!” he announced. “And this is my horse, named Trojan, for I am a connoisseur of Greek literature.”\n\nThe horse’s rump, on closer inspection, was branded with the word “Trojan,” which in retrospect should have been a dead giveaway, but if any of the guards watching from the walls during the sacking of the barbarian market had noticed, none of them had made the connection.\n\nHe grinned at the mayor and said, \"You are a most clever man.\"\n\n“It’s not fair!” protested the mayor. “You sacked your own market!”\n\n“I must commend you,” said the barbarian king. “We’ve never had to try so many different permutations of the Trojan horse tactic before. You burned our traditional wooden horse. You discovered our secret propaganda letters. You avoided the bad optics of destroying your own wax effigy. You never permitted your knights to venture out into the market — which was definitely a trap.”\n\n“I knew it,” said the mayor, smugly.\n\n“But…” The barbarian king gestured at the jewels laying on the ground in front of the peasants. “You did take the bread and jewels.”\n\n“What was in the bread and jewels?” demanded the mayor. “I had them thoroughly checked.”\n\n“An attempt to disrupt your local economy, destabilize your currency, undermine your political power, and incite a popular uprising,” said the barbarian king.\n\n“Well it didn’t work,” said the mayor, smugly.\n\nTo the peasants, the barbarian king announced, “I’ll make you a deal. Keep your jewels! Tonight we feast! Drinks will be discounted! Or…” He paused. Weary peasants and knights leaned forward, holding their breath. “My horde and I will leave in peace — leaving your jewels, your mayor, your tax laws, and your very, very civilized, non-barbaric economic system intact.”\n\nThe peasants looked uneasily at each other. The mayor folded his arms, standing tall — in contrast with his stooping wax statue. He smirked.\n\nThen one small voice, somewhere in the crowd murmured, “Wouldn’t mind a drink myself…” And suddenly the whole crowd was shouting eagerly about drinks and feasts and making significant adjustments to the systems presently in place.\n\n“Then let us drink!” roared the barbarian king. In accordance with the culture of the polite barbarians, he ran the mayor through with his sword and left the body beside the wax statue — now sagging almost to the ground. The sounds of that night's victory feast could be heard for miles, matters having been politely resolved with minimal bloodshed.\n`","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}